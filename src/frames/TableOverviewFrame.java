/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;


import classes.MSSQLTransactions;
import static classes.AppInit.*;
import java.awt.Component;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.control.Button;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.ListModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;
import models.EnginesEnum;
/**
 *
 * @author jsarnowski
 */
public class TableOverviewFrame extends javax.swing.JFrame {

    private String currentDb;
    private String currentTable;
    private ResultSet res;
    private DefaultTableModel tableData;
    
    private List<Button> EditButtons;
    private List<Button> DeleteButtons;
    
    /**
     * Creates new form TableOverviewFrame
     */
    public TableOverviewFrame(String dbName, String tableName) {
        initComponents();
        this.currentDb=dbName;
        this.currentTable=tableName;
        setLocationRelativeTo(null);
        this.setTitle("Universal Database Manager");
        
        EditButtons = new ArrayList<Button>();
        DeleteButtons = new ArrayList<Button>();
        
        if(appInit.engine.equals(EnginesEnum.Engines.MSSQL.toString())) {
            res = appInit.mssqlTransactions.SelectAll(dbName, tableName);
        }
        else if(appInit.engine.equals(EnginesEnum.Engines.MySQL.toString())) {
            res = appInit.mysqlTransactions.SelectAll(dbName, tableName);
        }
        try {
                tableData=new DefaultTableModel();

                //liczenie kolumn
                ResultSetMetaData md=res.getMetaData();
                int columnCount=md.getColumnCount();
                
                //nagłówki kolumn
                List<Object> tableHeaders = new ArrayList<Object>();
                     for(int i=1;i<=columnCount;i++){
                         tableHeaders.add(md.getColumnName(i));
                        }
                        columnCount++;
                        tableHeaders.add("Actions");

                //test data
                Object[][] data = new Object[][] {};
                
                
                  List<Object[]> table = new ArrayList<>();
                    while( res.next()) {
                        Object[] row = new Object[columnCount];
                        for( int iCol = 1; iCol < columnCount; iCol++ ){
                            Object obj = res.getObject( iCol );
                            row[iCol-1] = (obj == null) ?null:obj.toString();
                            System.out.println(obj.toString());
                        }
                        table.add( row );
                    }
                
               data = new Object[columnCount][];
               table.toArray(data);
               dataOverviewTable.setModel(new DefaultTableModel(table.toArray(data),tableHeaders.toArray()));
            } 
            catch (SQLException ex) {
                Logger.getLogger(TableSelectFrame.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println(ex.toString());
            }              
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        TableListPane = new javax.swing.JPanel();
        TableListScrollPane = new javax.swing.JScrollPane();
        dataOverviewTable = new javax.swing.JTable();
        RecordDetailsPane = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        LogoutMenuButton = new javax.swing.JMenuItem();
        ExitMenuButton = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        SwitchTableMenuButton = new javax.swing.JMenuItem();

        setLocation(new java.awt.Point(1, 1));
        setMinimumSize(new java.awt.Dimension(1280, 1024));
        setName("TableOverviewFrame"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1280, 1024));
        setSize(new java.awt.Dimension(1280, 1024));

        TableListPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        TableListScrollPane.setBorder(null);

        dataOverviewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        dataOverviewTable.setCellSelectionEnabled(true);
        dataOverviewTable.getTableHeader().setReorderingAllowed(false);
        TableListScrollPane.setViewportView(dataOverviewTable);

        javax.swing.GroupLayout TableListPaneLayout = new javax.swing.GroupLayout(TableListPane);
        TableListPane.setLayout(TableListPaneLayout);
        TableListPaneLayout.setHorizontalGroup(
            TableListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TableListScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
        );
        TableListPaneLayout.setVerticalGroup(
            TableListPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TableListScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
        );

        TableListScrollPane.getAccessibleContext().setAccessibleName("TableListScrollPane");
        TableListScrollPane.getAccessibleContext().setAccessibleDescription("");

        RecordDetailsPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout RecordDetailsPaneLayout = new javax.swing.GroupLayout(RecordDetailsPane);
        RecordDetailsPane.setLayout(RecordDetailsPaneLayout);
        RecordDetailsPaneLayout.setHorizontalGroup(
            RecordDetailsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        RecordDetailsPaneLayout.setVerticalGroup(
            RecordDetailsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 323, Short.MAX_VALUE)
        );

        jMenu1.setText("File");

        LogoutMenuButton.setText("Logout");
        LogoutMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutMenuButtonActionPerformed(evt);
            }
        });
        jMenu1.add(LogoutMenuButton);

        ExitMenuButton.setText("Exit");
        ExitMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitMenuButtonActionPerformed(evt);
            }
        });
        jMenu1.add(ExitMenuButton);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Actions");

        SwitchTableMenuButton.setText("Switch table");
        SwitchTableMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SwitchTableMenuButtonActionPerformed(evt);
            }
        });
        jMenu2.add(SwitchTableMenuButton);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TableListPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(RecordDetailsPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TableListPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RecordDetailsPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitMenuButtonActionPerformed
        try {
            if(appInit.engine.equals(EnginesEnum.Engines.MSSQL.toString())) {
                if(appInit.mssqlConnection.connection.isClosed() != true) {
                    appInit.mssqlConnection.connection.close();
                }
            }
            else if(appInit.engine.equals(EnginesEnum.Engines.MySQL.toString())) {
                if(appInit.mysqlConnection.connection.isClosed() != true) {
                    appInit.mysqlConnection.connection.close();
                }
            }   
        } catch (SQLException ex) {
            Logger.getLogger(TableOverviewFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.exit(0);
    }//GEN-LAST:event_ExitMenuButtonActionPerformed

    private void LogoutMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutMenuButtonActionPerformed
        try {
            if(appInit.engine.equals(EnginesEnum.Engines.MSSQL.toString())) {
                if(appInit.mssqlConnection.connection.isClosed() != true) {
                    appInit.mssqlConnection.connection.close();
                }
            }
            else if(appInit.engine.equals(EnginesEnum.Engines.MySQL.toString())) {
                if(appInit.mysqlConnection.connection.isClosed() != true) {
                    appInit.mysqlConnection.connection.close();
                }
            }  
            this.setVisible(false);
            appInit.loginFrame.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(TableOverviewFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_LogoutMenuButtonActionPerformed

    private void SwitchTableMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SwitchTableMenuButtonActionPerformed
        this.setVisible(false);
        appInit.tableSelectFrame.setVisible(true);
    }//GEN-LAST:event_SwitchTableMenuButtonActionPerformed

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {
        
    }
    
    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TableOverviewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TableOverviewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TableOverviewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableOverviewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
    }

               
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ExitMenuButton;
    private javax.swing.JMenuItem LogoutMenuButton;
    private javax.swing.JPanel RecordDetailsPane;
    private javax.swing.JMenuItem SwitchTableMenuButton;
    private javax.swing.JPanel TableListPane;
    private javax.swing.JScrollPane TableListScrollPane;
    private javax.swing.JTable dataOverviewTable;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    private Button EditButton;
    private Button DeleteButton;
}
