/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import classes.DataBaseSelectModel;
import classes.MSSQLConnection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import models.EnginesEnum;
import static classes.AppInit.appInit;
import static classes.AppInit.main;

/**
 *
 * @author Damian
 */
public class TableSelectFrame extends javax.swing.JFrame {

    private boolean dbSelected=false;
    private boolean tableSelected=false;
    
    private String selectedDb="";
    private String selectedTable="";
    private String value="";
    /**
     * Creates new form ActionSelectFrame
     */
    public TableSelectFrame() throws SQLException {
        initComponents();
        this.setTitle("Main menu");
        setLocationRelativeTo(null);
        
        ResultSet dbResult = null;
        if(appInit.engine.equals(EnginesEnum.Engines.MSSQL.toString()))
        dbResult = appInit.mssqlTransactions.GetDBList();
        else if(appInit.engine.equals(EnginesEnum.Engines.MySQL.toString()))
        dbResult = appInit.mysqlTransactions.GetDBList();

        List<String> databases = new ArrayList<String>();     
        while (dbResult.next()) {
            databases.add(dbResult.getString(1));
        }
        DbSelect.setModel(new DefaultComboBoxModel(databases.toArray()));
        
        value=DbSelect.getSelectedItem().toString();
        ResultSet tableResult = null;
        if(appInit.engine.equals(EnginesEnum.Engines.MSSQL.toString()))
        tableResult=appInit.mssqlTransactions.GetTableListForDb(value);
        else if(appInit.engine.equals(EnginesEnum.Engines.MySQL.toString()))
        tableResult=appInit.mysqlTransactions.GetTableListForDb(value);
        List<String> tables = new ArrayList<String>();
        try {
            while (tableResult.next()) {
                tables.add(tableResult.getString(1));
            }
            selectedDb=value;
            dbSelected=true;
        } catch (SQLException ex) {
            Logger.getLogger(TableSelectFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.toString());
        }   
        tableSelect.setModel(new DefaultComboBoxModel(tables.toArray()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SelectButton = new javax.swing.JButton();
        DbSelect = new javax.swing.JComboBox<>();
        tableSelect = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        javax.swing.JMenuItem LogoutOpt = new javax.swing.JMenuItem();
        AboutOpt = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SelectButton.setText("CONFIRM");
        SelectButton.setActionCommand("runSelectViewbutton");
        SelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectButtonActionPerformed(evt);
            }
        });

        DbSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select database" }));
        DbSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DbSelectActionPerformed(evt);
            }
        });

        tableSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select table" }));
        tableSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableSelectActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        LogoutOpt.setText("Logout");
        LogoutOpt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutOptActionPerformed(evt);
            }
        });
        jMenu1.add(LogoutOpt);

        AboutOpt.setText("About");
        AboutOpt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutOptActionPerformed(evt);
            }
        });
        jMenu1.add(AboutOpt);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DbSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SelectButton, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addComponent(tableSelect, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(DbSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tableSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(SelectButton)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LogoutOptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutOptActionPerformed
        try {
            if(appInit.mssqlConnection.connection.isClosed() != true) {
                appInit.mssqlConnection.connection.close();
            }
            this.setVisible(false);
            appInit.loginFrame.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(TableOverviewFrame.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }//GEN-LAST:event_LogoutOptActionPerformed

    private void DbSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DbSelectActionPerformed
        value=DbSelect.getSelectedItem().toString();
        ResultSet rs = null;
        if(appInit.engine.equals(EnginesEnum.Engines.MSSQL.toString()))
        rs=appInit.mssqlTransactions.GetTableListForDb(value);
        else if(appInit.engine.equals(EnginesEnum.Engines.MySQL.toString()))
        rs=appInit.mysqlTransactions.GetTableListForDb(value);
        List<String> tables = new ArrayList<String>();
        try {
            while (rs.next()) {
                tables.add(rs.getString(1));
                selectedDb=value;
                dbSelected=true;
                tableSelect.setModel(new DefaultComboBoxModel(tables.toArray()));
            }
        } catch (SQLException ex) {
            Logger.getLogger(TableSelectFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.toString());
        }   
    }//GEN-LAST:event_DbSelectActionPerformed

    private void SelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectButtonActionPerformed
        if(tableSelected&&dbSelected&&selectedDb!=""&&selectedTable!=""){            
            appInit.tableOverviewFrame=new TableOverviewFrame(selectedDb,selectedTable);
            appInit.tableOverviewFrame.setSize(600,600);
            appInit.tableOverviewFrame.setVisible(true);
            appInit.tableOverviewFrame.setDefaultCloseOperation(WindowConstants.HIDE_ON_CLOSE);
            this.setVisible(false);
        }
        else
            JOptionPane.showMessageDialog(null, "Wybierz bazę i tabelę");
    }//GEN-LAST:event_SelectButtonActionPerformed

    private void AboutOptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutOptActionPerformed
        appInit.aboutFrame = new AboutFrame();
        appInit.aboutFrame.setSize(600,500);                
        appInit.aboutFrame.setResizable(false);
        appInit.aboutFrame.setDefaultCloseOperation(WindowConstants.HIDE_ON_CLOSE);
        appInit.aboutFrame.setVisible(true);
    }//GEN-LAST:event_AboutOptActionPerformed

    private void tableSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableSelectActionPerformed
        value=tableSelect.getSelectedItem().toString();
        selectedTable=value;
        if(value!=null)
          tableSelected=true;
    }//GEN-LAST:event_tableSelectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TableSelectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TableSelectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TableSelectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableSelectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TableSelectFrame().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(TableSelectFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AboutOpt;
    private javax.swing.JComboBox<String> DbSelect;
    private javax.swing.JButton SelectButton;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JComboBox<String> tableSelect;
    // End of variables declaration//GEN-END:variables
}
